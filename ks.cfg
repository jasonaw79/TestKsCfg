############################################################################
##
## $RCSfile: ks.cfg,v $
## $Revision: 2.11 $
## $Date: 14-12-2020 00:29:38 $
## $Author: Jason <jason@seagate.com> $
## $Source: /usr/local/cvsroot/fof/setup/kickstart/ksfiles/centos-6.4/ks.cfg,v $
##
##  Rebecca Hepper
##  Seagate Technology
##
##  CentOS 6.4 kickstart file for all Seagate FOF systems.
##
##############################################################################

## Authentication Options (required)
## --useshadow = use shadow passwords
auth --useshadow

## Bootloader Configuration (required)
## Bootloader is GRUB
## install on the master boot record of the first drive
## Commented out (ADW 30-July-2014) - explicitly declare the devices for the
##                                    bootloader in the partitioning section
#bootloader --location=mbr

## Clearpart (optional)
## clearpart --all wipes out all existing partitions including windows
##           --linux wipes out only linux partitions
%include /tmp/clearpart-include

## Firewall Configuration (optional)
## disabled does not configure any iptables rules
firewall --disabled

## Install a fresh system rather than upgrading an existing one (optional)
install

## Installation Method (required)
nfs --server=tse-kickstart.seagate.com --dir=/var/redhat.disks/data/centos-6.4

## Keyboard Configuration (required)
keyboard us

## Language to use during install (required)
lang en_US

## Controls error logging of anaconda during installation
## Level specifies the min level of messages that appear on tty3
logging --level debug

## Network Configuration (optional)
network --bootproto=dhcp

## Partitioning Information (required)
## which partitions to set up on the new system as well as the size in megabytes
## include a file created in the %pre section
%include /tmp/partition-include

## Rootpassword (Encrypted) (required)
rootpw --iscrypted ABuRmyJpjpdeQ

## SELinux Policy (optional)
selinux --disabled

## Time Zone Configuration (required)
## Do not change this because logic in the %post section depends on this timezone
timezone GMT

## User (optional)
user --name=merlin --password=ABuRmyJpjpdeQ --iscrypted

## X Window System Configuration  (optional)
xconfig --defaultdesktop="GNOME"

## Zerombr (optional)
## any invalid partition tables are initialized (yes)
zerombr

## Package Designation
## the package names and group names can be in centos-6.4/repodata/comps.xml file; 
## groups need a '@' in front of them; Core and Base are selected by default
%packages

# This includes some libraries that we need to compile into python
@ Additional Development
-GConf2-devel
-audit-libs-devel
-alsa-lib-devel
-binutils-devel
-boost-devel
-dbus-glib-devel
-elfutils-devel
-elfutils-libelf-devel
-evolution-data-server-devel
-gnome-desktop-devel
-gnome-keyring-devel
-gstreamer-devel
-hmaccalc
-libacl-devel
-libattr-devel
-libcanberra-devel
-libcgroup-devel
-libcurl-devel
-libgnome-devel
-librsvg2-devel
-libnotify-devel
-libsoup-devel
-mysql-devel
-polkit-devel
-pulseaudio-libs-devel
-pygtk2-devel
-sqlite-devel
-tbb-devel


@ Graphical Administration Tools

## Packages to remove from the Base group
-abrt-cli
-abrt-addon-ccpp
-abrt-addon-kerneloops
-abrt-addon-python
-acpid
-b43-fwcutter
-biosdevname
-blktrace
-bridge-utils
-cpuspeed
-dmraid
-fprintd-pam
-hunspell-en
-irqbalance
-libaio
-ledmon
-man-pages-overrides
-microcode_ctl
-nano
-pcmciautils
-prelink
-rdate
-readahead
-rfkill
-rng-tools
-scl-utils
-sos
-system-config-firewall-tui
-tcsh
-vconfig
-virt-what
-words
-yum-plugin-security
-yum-utils


## Packages to remove from the Dial-up Networking Support group 
-wvdial

## Packages to remove from the Core group
-aic94xx-firmware
-attr
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-efibootmgr
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl1000-firmware
-iwl100-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
-libertas-usb8388-firmware
-postfix
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware

## Packages to remove from the Large Systems Performance group
-numactl 
-libcgroup

@ Desktop
-alsa-plugins-pulseaudio
-control-center-extra
-gdm-plugin-fingerprint
-gdm-user-switch-applet
-gvfs-archive
-gvfs-smb
-gok
-orca
-pulseaudio-module-gconf
-pulseaudio-module-x11
-vino
-xdg-user-dirs-gtk


@ Development Tools
-bison
-byacc
-cscope
-ctags
-diffstat
-doxygen
-flex
-indent
-jpackage-utils
-rcs
-subversion

@ FTP server

@ General Purpose Desktop
-brasero-nautilus
-cheese
-compiz-gnome
-evince-dvi 
-file-roller
-gnome-bluetooth
-gnome-user-share
-gnote
-gucharmap
-gvfs-afc
-gvfs-gphoto2
-gvfs-obexftp
-mousetweaks
-nautilus-open-terminal
-nautilus-sendto
-PackageKit-gstreamer-plugin 
-rhythmbox
-scenery-backgrounds
-seahorse
-sound-juicer
-system-config-firewall
-totem-nautilus
-totem

@ Internet Browser
-nspluginwrapper
-totem-mozplugin

@ Legacy UNIX compatibility

@ PostgreSQL Database server

@ Web Server
-squid
-mod_wsgi

@ X Window System
-glx-utils
-spice-vdagent
-wacomexpresskeys
-wdaemon
-plymouth-system-theme
-xvattr

@Puppet-Products

@Puppet-Deps

@Thai support

## Additional packages to install
bind
bind-chroot
compat-libstdc++-33
dejavu-sans-mono-fonts
dhcp
fontconfig-devel
freetype-devel
ftp
gconf-editor
gnome-python2-gconf
gnome-system-log
gtkhtml3
iptraf
libusb-devel
lm_sensors-devel
lm_sensors.i686
m2crypto
mc
mesa-dri-drivers
mesa-dri1-drivers
mesa-dri-filesystem
mesa-libGL
mesa-libGLU
mod_authz_ldap
mod_ssl
minicom
nc
nfs-utils
nspluginwrapper
openldap-clients
openssl
openssl-devel
postgresql-plpython
procmail
pulseaudio
python-ldap
python-tools
rdesktop
rpm-python
ruby
rubygems
spamassassin
sssd
tcl-devel
tcpdump
telnet
telnet-server
tftp
tftp-server
tigervnc
tk-devel
tpm-tools
tpm-tools-devel
tpm-tools-pkcs11
trousers
opencryptoki

## Additional packages to remove
-abrt
-bluez-libs
-cairo-devel
-db4-utils
-dbus-devel
-evince-libs
-gnome-vfs2-devel
-hal-devel
-java-1.7.0-openjdk
-kpathsea
-libbonobo-devel
-libpng-devel
-libxrender-devel
-lynx
-mobile-broadband-provider-info
-mozilla-filesystem
-neon
-NetworkManager-gnome
-NetworkManager
-NetworkManager-glib
-pango-devel
-python-slip-gtk


%pre
#!/bin/sh

# Functions necessary for determining platform
LSPCI=`/mnt/runtime/usr/sbin/lspci -n`
LSPCI_VERBOSE=`/mnt/runtime/usr/sbin/lspci -nv`
system_contains_device(){ if [ `echo "$LSPCI" | grep -c $1` -gt 0 ]; then echo found; fi; }
system_contains_device_count(){ echo "$LSPCI" | grep -c $1; }
system_contains_device_subsystem(){ if [ `echo "Subsystem: $LSPCI_VERBOSE" | grep -c $1` -gt 0 ]; then echo found; fi; }

# Determine number of USB drives and Hard Drives present
dir="/sys/block"
index=0
numDrives=0
num=1
for dev in sda sdb sdc sdd sde ;do
        if [ -d $dir/$dev ]; then
                removable=$(cat $dir/$dev/removable)
                if [ "$removable" == 1 ]; then
                        usbdrive[index]=$dev$num
			echo "USB device found at $dev"
                        index=$((index+1))
		else
			drive[numDrives]=$dev
			echo "Drive found at $dev"
			numDrives=$((numDrives+1))
                fi
        fi
done

# Determine drive model
# Alternate for loop form required because brace expansion comes before variable expansion
idx=1
for ((i=0; i<$numDrives; i++)); do
   MODEL=`hdparm -I /dev/${drive[i]} | grep "Model Number:" | awk '{print $3}'`
   Model[i]=$MODEL
done

drive1="${drive[0]}"
drive2="${drive[1]}"
model1="${Model[0]}"
model2="${Model[1]}"

# Exit installer if drives are not the same
if [ $((numDrives)) == 2 ] && [ $model1 != $model2 ] ; then 
   exit
fi

## Write out partition scheme based on number & types of hard drives
##   Commented out /usr, /usr/local, and /home partitions and allocated more to /
##   This will put all of these partitions now under / and share the larger space
##   Remove commented lines someday later once we are all satisified this works okay
if [ $((numDrives)) == 2 ] ; then 
  # Avoid formatting USB key(s)
  echo "clearpart --drives=$drive1,$drive2 --all" >> /tmp/clearpart-include
  echo "# Partitioning scheme generated in kickstart %pre for 2 drives" > /tmp/partition-include
  echo "bootloader --location=mbr --driveorder=$drive1,$drive2" > /tmp/partition-include
  echo "part raid.3 --size=1024 --ondisk=$drive1 --asprimary" >> /tmp/partition-include
  echo "part raid.4 --size=1024 --ondisk=$drive2 --asprimary" >> /tmp/partition-include
  echo "part raid.6 --size=4096 --ondisk=$drive1" >> /tmp/partition-include
  echo "part raid.7 --size=4096 --ondisk=$drive2" >> /tmp/partition-include
  echo "part raid.9  --size=31744 --ondisk=$drive1" >> /tmp/partition-include
  echo "part raid.10 --size=31744 --ondisk=$drive2" >> /tmp/partition-include
#  echo "part raid.12 --size=8192 --ondisk=$drive1" >> /tmp/partition-include
#  echo "part raid.13 --size=8192 --ondisk=$drive2" >> /tmp/partition-include
#  echo "part raid.15 --size=5120 --ondisk=$drive1" >> /tmp/partition-include
#  echo "part raid.16 --size=5120 --ondisk=$drive2" >> /tmp/partition-include
#  echo "part raid.18 --size=6144 --ondisk=$drive1" >> /tmp/partition-include
#  echo "part raid.19 --size=6144 --ondisk=$drive2" >> /tmp/partition-include
  echo "part raid.21 --size=32768 --ondisk=$drive1" >> /tmp/partition-include
  echo "part raid.22 --size=32768 --ondisk=$drive2" >> /tmp/partition-include
  echo "part raid.24 --size=5120 --grow --ondisk=$drive1" >> /tmp/partition-include
  echo "part raid.25 --size=5120 --grow --ondisk=$drive2" >> /tmp/partition-include
  echo "raid /boot       --fstype ext4 --level=RAID1 --device md0 raid.3 raid.4" >> /tmp/partition-include
  echo "raid swap        --fstype swap --level=RAID1 --device md1 raid.6 raid.7" >> /tmp/partition-include
  echo "raid /           --fstype ext4 --level=RAID1 --device md2 raid.9 raid.10" >> /tmp/partition-include
#  echo "raid /usr        --fstype ext4 --level=RAID1 --device md3 raid.12 raid.13" >> /tmp/partition-include
#  echo "raid /usr/local  --fstype ext4 --level=RAID1 --device md4 raid.15 raid.16" >> /tmp/partition-include
#  echo "raid /home       --fstype ext4 --level=RAID1 --device md5 raid.18 raid.19" >> /tmp/partition-include
  echo "raid /var        --fstype ext4 --level=RAID1 --device md6 raid.21 raid.22" >> /tmp/partition-include
  echo "raid /var/merlin --fstype ext4 --level=RAID1 --device md7 raid.24 raid.25" >> /tmp/partition-include  
else
  # Avoid formatting USB key(s)
  echo "clearpart --drives=$drive1 --all" >> /tmp/clearpart-include
  ## One drive  
  echo "# Partitioning scheme generated in kickstart %pre for 1 drive" > /tmp/partition-include
  echo "bootloader --location=mbr --driveorder=$drive1" > /tmp/partition-include
  ## Basic partition information for every system
  ## --size is the minimum size in megabytes
  echo "part /boot --size 1024 --ondisk=$drive1" >> /tmp/partition-include
  echo "part swap --size 4096 --ondisk=$drive1" >> /tmp/partition-include
  echo "part / --size 31744 --ondisk=$drive1" >> /tmp/partition-include 
#  echo "part /usr --size 8192" >> /tmp/partition-include
#  echo "part /usr/local --size 5120" >> /tmp/partition-include
#  echo "part /home --size 6144" >> /tmp/partition-include
  echo "part /var --size 32768 --ondisk=$drive1" >> /tmp/partition-include
  echo "part /var/merlin --size 5120 --grow --ondisk=$drive1" >> /tmp/partition-include
fi

if [ $(system_contains_device "8086:2778") ]; then
   platform="SE7230Host"
fi

if [ $(system_contains_device "8086:2578") ]; then
   platform="P4-875Host"
fi

if [ $(system_contains_device "8086:2770") ]; then
   # Four flavors of 945... Intel GCZLKR or Advantech Long life AIMB-562 or AIMB-763G2
   #                                     or Advantech GMB-945GC Cluster PC for Teradyne Neptune2
   # Check for Intel
   if [ $(system_contains_device_subsystem "8086:544e") ]; then
      platform="P4-945CM"
   # If not Intel check for Advantech long life MB that uses Pro PL 1000 for ethernet
   # The AIMB-562 used on Gemini has one ethernet controller
   # The AIMB-763G2 planned for use on Optimus has two ethernet controllers
   #                This board will probably be used for a long life Gemini Host too
   elif [ $(system_contains_device "8086:109a") ]; then
      if [ $(system_contains_device_count "8086:109a") == "1" ]; then
         platform="P4-945CM-AIMB"
      fi
      if [ $(system_contains_device_count "8086:109a") == "2" ]; then
         # For Optimus, the AIMB-763G2 board will be used for Host, CMs, and MatCos, so need
         # to force systype to Host to be sure extra packages get installed since we have no
         # no way to determine if the PC is going to be used for a Host or CM.
         platform="P4-945CM-AIMB_G2"
      fi
   # Finally check for Advantech GMB-945GC Cluster PC for Teradyne Neptune2
   elif [ $(system_contains_device_subsystem "8086:27c0") ]; then
      if [ $(system_contains_device_count "10ec:8168") == "2" ]; then
         platform="P4-945CM-AGMB"
      fi
   else
      platform="P4-945CM"
   fi
fi

## P4-945CM Cluster PC for Teradyne Neptune2 (original BCM MX945GME)
if [ $(system_contains_device "8086:27ac") ]; then
   if [ $(system_contains_device_subsystem "8086:27c4") ]; then
      platform="P4-945CM-GME"
   else
      platform="P4-945CM"
   fi
fi

## P4-865CM
if [ $(system_contains_device "8086:2570") ]; then
   platform=P4-865CM
fi

## P4-845CM
if [ $(system_contains_device "8086:2560") ]; then
   echo "*** P4-845 CM ***"
   platform="P4CM"
fi

# New identification for Q77 Ivy Bridge Motherboards and CentOS 6.4
# June 2014
# Three types of Q77 motherboards - all are dual Gigabit Ethernet
# - No more distinction by hardware between CM, MC, or Host
# - Naming for System Type goes to Neptune2 style calling it a CPC
# - CPC name as Cluster PC can also be more appropriately called Common PC
# - Meaning common across all types of PCs in the system.
# - This fits for Neptune2, Optimus 2500, P-STR, Nimbus, and now Gemini.
# Advantech AIMB-582 (uATX) - Gemini 1U CM & MC and 2U Host
# Axiomtek MANO-873 (mini-ITX) - Neptune2, P-STR, Nimbus - All PCs
# Aaeon EMB-Q77B (mini-ITX) - Neptune2, P-STR, Nimbus - All PCs
# Note: We are going to support i3, i5, and i7 CPUs on all of the Q77 PCs
#       however thermal performance has not been tested or guaranteed with
#       the i7 CPU.  Nimbus and Gemini Q77 PCs will be launched with i5
#       while Neptune2 and P-STR will be launched with i3.  Differing RAM
#       configurations too.  This is the first time that the Platform
#       identifier will be dynamically name with the CPU class (i3, i5, i7).
if [ $(system_contains_device "8086:0150") ]; then
   CPUname=`grep "model name" /proc/cpuinfo | head -n 1`
   [ -z "${CPUname##*i3-*}" ] && CPUclass="i3"
   [ -z "${CPUname##*i5-*}" ] && CPUclass="i5"
   [ -z "${CPUname##*i7-*}" ] && CPUclass="i7"
   [ -z "$CPUclass" ] && CPUclass="Unknown"
   platform="$CPUclass-Q77"
   if [ $(system_contains_device "8086:1e1a") ]; then
      platform="$platform-AIMB"
   elif [ $(system_contains_device "8086:1e1c") ]; then
      platform="$platform-AX"
   elif [ $(system_contains_device "8086:1e18") ]; then
      platform="$platform-AA"
   fi
fi

## Now put it all in the details file
echo "platform=$platform" >> /tmp/ks_details
echo "numDrives=$numDrives" >> /tmp/ks_details
echo "DriveModel1=$model1" >> /tmp/ks_details
echo "DriveModel2=$model2" >> /tmp/ks_details

%end

%post --nochroot
## A chroot post section can only read from /mnt/sysimage which is mounted at /; A nochroot post reads from
## the ramdisk; copy file created in %pre in a nochroot post section so the file can be retrieved in the other post section
mv /tmp/ks_details /mnt/sysimage/root
cp /tmp/ks.cfg /mnt/sysimage/root/
cp /tmp/pcType /mnt/sysimage/root/
cp /tmp/anaconda.log /mnt/sysimage/root/
cp /tmp/partition-include /mnt/sysimage/root/ks_pre_partition-include
cp /tmp/clearpart-include /mnt/sysimage/root/ks_pre_clearpart-include

%end

## The log option creates a log file on the new machine of all the echo statements as well as any errors
%post --log=/root/ks-postInstall.log

echo "Starting the post install section"

## Start or stop several services at boot
echo "Starting/stopping services at boot"
/sbin/chkconfig telnet on
/sbin/chkconfig --level 35 sshd on
/sbin/chkconfig --level 35 iptables on
/sbin/chkconfig --level 345 vsftpd on
/sbin/chkconfig --level 345 httpd on 
/sbin/chkconfig --level 345 ntpd on
#/sbin/chkconfig --level 345 NetworkManager off
/sbin/chkconfig --level 2345 smartd on
/sbin/chkconfig --level 35 lm_sensors on
/sbin/chkconfig --level 345 tcsd on
/sbin/chkconfig --level 345 pkcsslotd on

## Delete services we will never want to run - this makes a more secure system
for file in auditd bluetooth nmb saslauthd smb spamassassin winbind wpa_supplicant 
do
   echo "Removing service: $file"
   rm -f /etc/rc.d/init.d/$file
done

## Remove symbolic link so user merlin can not halt the system
rm -f /usr/bin/halt

## Mount an NFS server
mkdir /mnt/tmp
echo "Mounting an NFS server and copying over files"
mount -o nolock,ro,rsize=8192,wsize=8192 tse-kickstart.seagate.com:/var/redhat.disks /mnt/tmp

# Pull in and display stored system details from file created in %pre section
get_stored_value(){ value=`grep "$1" "/root/ks_details"  | sed "s/$1=//g"`; echo $value; }
platform=$(get_stored_value "platform")
numDrives=$(get_stored_value "numDrives")

echo "Copying extra RPM files"
cp /mnt/tmp/myrpm/centos-6.4/python*.rpm /home
cp /mnt/tmp/myrpm/centos-6.4/jre*.rpm /home
cp /mnt/tmp/myrpm/centos-6.4/flash-plugin*.rpm /home

# Copy additional RPMs for driver updates:
# As of Oct 2015, this is only an update to the e1000e
# network driver kernel module.
# Additional updates in the future can go here.
# Check if file exists so we can update ks.cfg
# and then later add file(s) or pull them back out
# if there is a problem.
echo "Copying updated driver RPM files"
[ -e /mnt/tmp/myrpm/centos-6.4/e1000e*.rpm ] && cp /mnt/tmp/myrpm/centos-6.4/e1000e*.rpm /home
# Backup the original e1000e kernel module
# If we *ever* update the kernel installed during kickstart, then this absolute pathname
# will break here and a few other places!
mkdir /root/kernel_module_backup
cp /lib/modules/2.6.32-431.17.1.el6.i686/kernel/drivers/net/e1000e/e1000e.ko /root/kernel_module_backup/e1000e.ko-original

## Copy Matco RPM as PC is kickstarted as Automation PC
if [ -f /root/pcType ]; then
	PC_ID=`cat /root/pcType`
	if [ "$PC_ID" == "matco" ] ; then
	    echo "Copying matco RPM files"
		cp /mnt/tmp/myrpm/centos-6.4/rh9.0*.rpm /etc
	fi
fi

echo "Copying misc configuration files"
## Copy sshd system wide configuration file
cp /mnt/tmp/cmfiles/centos-6.4/sshd_config /etc/ssh/sshd_config

## Copy files to display warning banners at login
cp /mnt/tmp/cmfiles/centos-6.4/issue /etc/issue
cp /mnt/tmp/cmfiles/centos-6.4/motd /etc/motd

## Copy file so system boots into run level 3
cp /mnt/tmp/cmfiles/centos-6.4/inittab /etc/inittab

## Copy files for subnetwork 
cp /mnt/tmp/cmfiles/network /etc/sysconfig

## Copy Firefox prefences file
cp /mnt/tmp/cmfiles/centos-6.4/all-seagate.js /usr/lib/firefox/browser/defaults/preferences

## Copy samba config file
[ -e /etc/samba/smb.conf ] && sed -i '245i\\tnt pipe support = no' /etc/samba/smb.conf

## Copy out fofpc-sw, fofpcRemote, fofpcRemote.py
echo "Copying fofpc files for PC customerization"
cp /mnt/tmp/fofpc/fofpc-sw /root
chmod 755 /root/fofpc-sw
mkdir -p /usr/local/fofpc/
cp /mnt/tmp/fofpc/service/fofpcRemote.py /usr/local/fofpc/
chmod 755 /usr/local/fofpc/fofpcRemote.py
cp /mnt/tmp/fofpc/service/fofpcRemote /etc/xinetd.d/
echo "fofpcRemote     44476/tcp                       # fofpcRemote" >> /etc/services

## Copy out PackageKit configuration file so the update applet in the notification area does not show up
echo "Copying PackageKit config file"
cp /mnt/tmp/cmfiles/centos-6.4/PackageKit.conf /etc/PackageKit

# Copy sensors files
[ -e /mnt/tmp/cmfiles/centos-6.4/lm_sensors-$platform ] && cp -f /mnt/tmp/cmfiles/centos-6.4/lm_sensors-$platform /etc/sysconfig/lm_sensors
[ -e /mnt/tmp/cmfiles/centos-6.4/lm_sensors-init.d-$platform ] && cp -f /mnt/tmp/cmfiles/centos-6.4/lm_sensors-init.d-$platform /etc/rc.d/init.d/lm_sensors
[ -e /mnt/tmp/cmfiles/centos-6.4/sensors3.conf-$platform ] && cp -f /mnt/tmp/cmfiles/centos-6.4/sensors3.conf-$platform /etc/sensors3.conf

echo "sensors -s > /dev/null 2>&1" >> /etc/rc.d/rc.local

# Copy sensors kernel module for Q77 boards
if [ -z "${platform##*Q77*}" ]; then
   cp /mnt/tmp/cmfiles/centos-6.4/nct6775.ko /lib/modules/2.6.32-431.17.1.el6.i686/kernel/drivers/hwmon/
   cp /mnt/tmp/cmfiles/centos-6.4/lm_sensors-Q77 /etc/sysconfig/lm_sensors
   chmod 744 /lib/modules/2.6.32-431.17.1.el6.i686/kernel/drivers/hwmon/nct6775.ko
fi

## run depmod for all installed kernels so the new module will have it's dependencies setup
## Will only run if a new module is present
   pushd /lib/modules >/dev/null 2>&1
   for kernel in *
   do
      depmod -A $kernel >/dev/null 2>&1
   done
   popd >/dev/null 2>&1

## Copy & Install CM Identification Utility, Sensor Data, & SMART Data Scripts/Services
cp /mnt/tmp/cmfiles/centos-6.4/cmidutil /root
chmod 755 /root/cmidutil
cp /root/cmidutil /home/merlin/
chown merlin:merlin /home/merlin/cmidutil
cp /mnt/tmp/cmfiles/centos-6.4/sensordata /root
chmod 755 /root/sensordata
cp /root/sensordata /home/merlin/
chown merlin:merlin /home/merlin/sensordata
cp /mnt/tmp/cmfiles/centos-6.4/smartdata /root
chmod 755 /root/smartdata
mkdir /usr/local/cmidutil
cp /root/cmidutil /usr/local/cmidutil/
cp /root/sensordata /usr/local/cmidutil/
cp /root/smartdata /usr/local/cmidutil/
echo "date '+%Y-%m-%d %T' >> /var/log/cmid_boot.log" >> /etc/rc.d/rc.local
echo "[ -x /usr/local/cmidutil/cmidutil ] && pushd /usr/local/cmidutil/ > /dev/null && sleep 10 && ./cmidutil -x -p /var/log/ > /dev/null && popd > /dev/null &" >> /etc/rc.d/rc.local
echo "[ -x /usr/local/cmidutil/sensordata ] && pushd /usr/local/cmidutil/ > /dev/null && sleep 5 && ./sensordata -p /var/log/ > /dev/null && popd > /dev/null &" >> /etc/rc.d/rc.local
echo "[ -x /usr/local/cmidutil/smartdata ] && pushd /usr/local/cmidutil/ > /dev/null && sleep 15 && ./smartdata -p /var/log/ > /dev/null && popd > /dev/null &" >> /etc/rc.d/rc.local
echo "smartinfo       39400/tcp                       # smartdata smartinfo.py" >> /etc/services
echo "smartinfo       39400/udp                       # smartdata smartinfo.py" >> /etc/services
echo "smartstatus     39500/tcp                       # smartdata" >> /etc/services
echo "smartstatus     39500/udp                       # smartdata" >> /etc/services
echo "sensorinfo      39600/tcp                       # sensordata sensorinfo.py" >> /etc/services
echo "sensorinfo      39600/udp                       # sensordata sensorinfo.py" >> /etc/services
echo "sensor          39700/tcp                       # sensordata" >> /etc/services
echo "sensor          39700/udp                       # sensordata" >> /etc/services
echo "pcinfo          39800/tcp                       # cmidutil pcinfo.py" >> /etc/services
echo "pcinfo          39800/udp                       # cmidutil pcinfo.py" >> /etc/services
echo "cmid            39900/tcp                       # cmidutil" >> /etc/services
echo "cmid            39900/udp                       # cmidutil" >> /etc/services
cp /mnt/tmp/cmfiles/centos-6.4/sensorinfo /etc/xinetd.d/
cp /mnt/tmp/cmfiles/centos-6.4/sensor /etc/xinetd.d/
cp /mnt/tmp/cmfiles/centos-6.4/pcinfo /etc/xinetd.d/
cp /mnt/tmp/cmfiles/centos-6.4/cmid /etc/xinetd.d/
cp /mnt/tmp/cmfiles/centos-6.4/smartinfo /etc/xinetd.d/
cp /mnt/tmp/cmfiles/centos-6.4/smartstatus /etc/xinetd.d/
cp /mnt/tmp/cmfiles/centos-6.4/sensorinfod /usr/local/cmidutil/
cp /mnt/tmp/cmfiles/centos-6.4/sensord /usr/local/cmidutil/
cp /mnt/tmp/cmfiles/centos-6.4/pcinfod /usr/local/cmidutil/
cp /mnt/tmp/cmfiles/centos-6.4/cmidd /usr/local/cmidutil/
cp /mnt/tmp/cmfiles/centos-6.4/smartinfod /usr/local/cmidutil/
cp /mnt/tmp/cmfiles/centos-6.4/smartstatusd /usr/local/cmidutil/
chmod 755 /usr/local/cmidutil/sensorinfod
chmod 755 /usr/local/cmidutil/sensord
chmod 755 /usr/local/cmidutil/pcinfod
chmod 755 /usr/local/cmidutil/cmidd
chmod 755 /usr/local/cmidutil/smartinfod
chmod 755 /usr/local/cmidutil/smartstatusd

## Copy Memtest86+ to /boot and add it to the grub.conf memu
if [ -e /mnt/tmp/cmfiles/centos-6.4/memtestp.img ]; then
   cp /mnt/tmp/cmfiles/centos-6.4/memtestp.img /boot
   echo "title Memtest86+"  >> /boot/grub/grub.conf
   echo "        root (hd0,0)"  >> /boot/grub/grub.conf
   echo "        kernel /memtestp.img"  >> /boot/grub/grub.conf
fi

## Copy the top command configuration file
cp /mnt/tmp/cmfiles/centos-6.4/toprc* /root

## Copy in the traceroute command just temporarily during kickstart
## because the installation image doesn't include it but we need it
## for finding the Host PC's IP address.  Delete it when done.
cp /mnt/tmp/cmfiles/centos-6.4/bin/traceroute /root
chmod 755 /root/traceroute

## Unmount the NFS server
umount /mnt/tmp
rm -fr /mnt/tmp

## Installing the rpms copied from the NFS server
cd /home
for pkg in *.rpm
do
  echo "Installing: $pkg"
  echo "Installing: $pkg" >> /root/install.log
  rpm -i --quiet $pkg >/dev/null 2>&1
  rm $pkg
done 

## Create the symbolic link for Java in the browser's plugin directory
# Old method commented out - newer Java versions create a symlink "latest"
# to the current version's directory - so use latest in the path now.
#JAVA_RPM=`rpm -q jre | tail -n 1`
#JAVA_VER=${JAVA_RPM#jre-}
#JAVA_VER=${JAVA_VER%-fcs*}
#echo "Linking Java $JAVA_VER to Mozilla/Firefox plug-ins"
echo "Linking latest Java to Mozilla/Firefox plug-ins"
[ ! -d /usr/lib/mozilla/plugins ] && mkdir /usr/lib/mozilla/plugins
#ln -s --target-directory=/usr/lib/mozilla/plugins/ /usr/java/jre$JAVA_VER/lib/i386/libnpjp2.so
ln -s --target-directory=/usr/lib/mozilla/plugins/ /usr/java/latest/lib/i386/libnpjp2.so

## Change setting in vsftpd config file so /var/log/messages does not fill up with vsftpd errors
cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.bak
sed -e 's/tcp_wrappers=YES/tcp_wrappers=NO/' /etc/vsftpd/vsftpd.bak > /etc/vsftpd/vsftpd.conf
rm /etc/vsftpd/vsftpd.bak

## Configure the smartd service; This deletes everything that exists in the original file and 
## leaves a single line in the new file.  All lines but the one being changed were commented out anyways
[ -e /etc/smartd.conf ] && mv -f /etc/smartd.conf /etc/smartd.conf.bak
echo "DEVICESCAN -H -f -l error -l selftest -C 197 -U 198 -s S/../../1/06" > /etc/smartd.conf

## Copy the top command configuration file for each user
## Different file for older single CPU non-HT platforms
if [ -e /root/toprc-mp ]; then
   if [ "$platform" == "P3-815CM" -o "$platform" == "P4CM" ]; then
      mv /root/toprc-sp /root/toprc
      rm /root/toprc-mp
   else
      mv /root/toprc-mp /root/toprc
      rm /root/toprc-sp
   fi
   chmod 664 /root/toprc
   pushd /home >/dev/null 2>&1
   for userdir in *; do
      if [ "$userdir" != "lost+found" ]; then
         cp /root/toprc $userdir/.toprc
         chown $userdir:$userdir $userdir/.toprc
         echo "Added toprc file for $userdir"
      fi
   done
   mv /root/toprc /root/.toprc
   popd >/dev/null 2>&1
fi

## Modify /etc/fstab to NOT mount the /boot partition automatically during start-up
## This helps protect the /boot partition from accidential modification or corruption
grep -v "/boot" /etc/fstab > /etc/fstab-t1
grep "/boot" /etc/fstab | sed "s/defaults/noauto,defaults/" > /etc/fstab-t2
cat /etc/fstab-t1 /etc/fstab-t2 > /etc/fstab
rm -f /etc/fstab-t?

# Determine if the system is on a local Gemini subnet
IPADDR=`/sbin/ifconfig | grep -A 1 "eth" | grep "inet addr"`
IPADDR=${IPADDR#*addr:*}
IPADDR=${IPADDR%%Bcast*}
LEN=${#HOSTNAME}
LEN=$((LEN - 11))
SEG=${HOSTNAME:LEN}

# New method using traceroute to find the next network device upstream
# from the Host PC, then use ping -R to discover the Host's IP address.
# This works around an issue with AVPN introduced in November 2012 by IT.
#   Additional changes to retry traceroute and validate the results.

if [ "${IPADDR:0:11}" == "192.168.100" ]; then
   for i in 1 2 3 4 5; do
      routerIP=`traceroute -n -m 2 -w 2 -q 1 10.30.18.232 2>&1 | tail -n 1 | awk '{ print $2 }'`
      decimals=0
      if [ "${#routerIP}" -ge 8 ]; then
         p=0
         until [ $p == ${#routerIP} ]; do
            if [ "${routerIP:p:1}" == "." ]; then
               decimals=$((decimals+1))
            fi
            p=$((p+1))
         done
         if [ $decimals == 3 ]; then
            break
         fi
      fi
      echo "Traceroute attempt $i failed"
      sleep 0.1
   done
   # Make sure traceroute returned something long enough to be an IP (not a *)
   if [ "${#routerIP}" -ge 8 ]; then
      HOSTIP=`ping -R -w 2 -c 1 -n $routerIP | grep "RR:" -A 1 | grep -v "RR:" | awk '{ print $1 }'`
   else
      echo "Failed to obtain good router IP"
   fi
   if [ -n "$HOSTIP" ]; then
      HOSTNM=`nslookup -sil $HOSTIP | grep "name ="`
      HOSTNM=${HOSTNM#*name = }
      HOSTNM=${HOSTNM%%.}
      # Work around a Seagate DNS naming problem on some Host systems
      HOSTNM="${HOSTNM%%seagate.com*}seagate.com"
   fi
   SUBNET="Yes"
   echo "Subnet Present:"
   echo " Host PC IP: $HOSTIP"
   echo " Host PC Hostname: $HOSTNM"
fi
rm -f /root/traceroute

# Get IP address of the system being kickstarted then the various octets of the IP address
# If the system is on the subnet, then substitute the Host's IP address
if [ -n "$SUBNET" ]; then
   ipAddr=$HOSTIP
else
   ipAddr=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`
fi

firstOctet=`echo $ipAddr | cut -d. -f1 | awk '{ print $1}'`
secondOctet=`echo $ipAddr | cut -d. -f2 | awk '{ print $1}'`
thirdOctet=`echo $ipAddr | cut -d. -f3 | awk '{ print $1}'`
timezone=""

# Seagate internal IP address are on a 10.x.x.x block; 
if [ $firstOctet == '10' ]; then
   # Second octet is different based on site per https://noc.minn.seagate.com/NOC/db.10.html
   # Minnesota
   if [ $secondOctet == '1' -o $secondOctet == '2' -o $secondOctet == '13' ]; then
      timezone='America\/Chicago'
   # Singapore
   elif [ $secondOctet == '3' -o $secondOctet == '4' -o $secondOctet == '11' -o $secondOctet == '29' -o $secondOctet == '32' -o $secondOctet == '33' -o $secondOctet == '34' -o $secondOctet == '36' ]; then
      timezone='Asia\/Singapore'
   # Thailand:  Korat, Teparuk
   elif [ $secondOctet == '7' -o $secondOctet == '8' -o $secondOctet == '19' -o $secondOctet == '42' -o $secondOctet == '44' ]; then
      timezone='Asia\/Bangkok'
   # Colorado
   elif [ $secondOctet == '30' -o $secondOctet == '31' ]; then
      timezone='America\/Denver'
   # China: Wuxi, Shenzhen,Suzhou
   elif [ $secondOctet == '38' -o $secondOctet == '39' -o $secondOctet == '40' -o $secondOctet == '43' ]; then
      timezone='Asia\/Shanghai'
   # Shrewsbury
   elif [ $secondOctet == '12' ]; then
      timezone='America\/New_York'
   # The Netherlands, Amsterdam
   elif [ $secondOctet == '15' ]; then
      timezone='Europe\/Amsterdam'
   # California
   elif [ $secondOctet == '5' -o $secondOctet == '6' -o $secondOctet == '23' -o $secondOctet == '24' -o $secondOctet == '25' -o $secondOctet == '26' -o $secondOctet == '28' ]; then
      timezone='America\/Los_Angeles'
   # Korea
   elif [ $secondOctet == '45' -o $secondOctet == '46' ]; then
      timezone='Asia\/Seoul'
   # United Kingdom - 1st attempt - 10.22.x.x is the kickstart server
   # but we don't know yet if the entire Xyratex office area and labs will
   # be on the 10.22.x.x network or something else.
   elif [ $secondOctet == '22' ]; then
      timezone='Europe\/London'
   else
      echo "ERROR: Setting Timezone; Do not recognize the Seagate internal IP address: $ipAddr"
   fi

# Seagate external IP Address; these are values per email from Randy Hollis
elif [ $firstOctet == '172' ]; then
   # UPS in the Netherlands
   if [ $thirdOctet == '19' ]; then
      timezone='Europe\/Amsterdam'
   # Benchmark in Winona
   elif [ $thirdOctet == '24' ]; then
      timezone='America\/Chicago'
   # UPS in Ostrava, Czech Republic
   elif [ $thirdOctet == '31' ]; then
      timezone='Europe\/Prague'
   # Benchmark in Thailand
   elif [ $thirdOctet == '35' ]; then
      timezone='Asia\/Bangkok'
   # AVC in LA
   elif [ $thirdOctet == '36' ]; then
      timezone='America\/Los_Angeles'
   # Greystone in Vietnam
   elif [ $thirdOctet == '39' -o $thirdOctet == '40' -o $thirdOctet == '54' ]; then
      timezone='Asia\/Ho_Chi_Minh'
   # Accel in India
   elif [ $thirdOctet == '41' ]; then
      timezone='Asia\/Kolkata'
   # Cal-Comp in Minous, Brazil
   elif [ $thirdOctet == '42' -o $thirdOctet == '44' -o $thirdOctet == '45' ]; then
      timezone='Brazil\/West'
   # Teleplan in Malaysia
   elif [ $thirdOctet == '46' -o $thirdOctet == '64' ]; then
      timezone='Asia\/Kuala_Lumpur'
   # AVC in Indianapolis
   elif [ $thirdOctet == '47' ]; then
      timezone='America\/Chicago'
   # Sao Paulo, Brazil
   elif [ $thirdOctet == '50' ]; then
      timezone='Brazil\/East'
   # Luckyford in China
   elif [ $thirdOctet == '58' ]; then
      timezone='Asia\/Shanghai'
   else
      echo "ERROR: Setting Timezone; Do not recognize the Seagate external IP address: $ipAddr"
   fi
else
   echo "ERROR: Setting Timezone; Do not recognize the IP address: $ipAddr"
fi

if [ "$timezone" != "" ]; then
   echo "Setting timezone, $timezone, for IP address: $ipAddr"
   mv /etc/sysconfig/clock /etc/sysconfig/clock.bak
   sed "s/GMT/${timezone}/g" /etc/sysconfig/clock.bak > /etc/sysconfig/clock
   rm -f /etc/sysconfig/clock.bak
   /usr/sbin/tzdata-update
fi

## Add kernel option to grub.conf
## Needed for lm_sensors to work properly with some motherboards with ACPI
if [ "$platform" == "P4-945CM-AIMB" -o "$platform" == "P4-945CM-AIMB_G2" -o "$platform" == "P4-945CM-AGMB" -o -z "${platform##*Q77*}" ]; then
   grubby --update-kernel=ALL --args="acpi_enforce_resources=lax"
   echo "Added kernel command line parameter for acpi for sensors"
fi

## Swap eth0 and eth1 on Axiomtek board & add command to rc.local for sensors to work
if [ "$platform" == "i3-Q77-AX" -o "$platform" == "i5-Q77-AX" -o "$platform" == "i7-Q77-AX" -o "$platform" == "P4-875Host" ]; then
   perl -pi -e 's/eth0/eth1/g' /etc/sysconfig/network-scripts/ifcfg-eth0
   perl -pi -e 's/eth1/eth0/g' /etc/sysconfig/network-scripts/ifcfg-eth1
   perl -pi -e 's/ONBOOT=\"yes\"/ONBOOT=\"no\"/g' /etc/sysconfig/network-scripts/ifcfg-eth0
   perl -pi -e 's/ONBOOT=no/ONBOOT=yes/g' /etc/sysconfig/network-scripts/ifcfg-eth1
   mv /etc/sysconfig/network-scripts/ifcfg-eth0 /etc/sysconfig/network-scripts/ifcfg-ethx
   mv /etc/sysconfig/network-scripts/ifcfg-eth1 /etc/sysconfig/network-scripts/ifcfg-eth0
   mv /etc/sysconfig/network-scripts/ifcfg-ethx /etc/sysconfig/network-scripts/ifcfg-eth1
   rm -f /etc/udev/rules.d/70-persistent-net.rules
   echo "Swapped eth0 and eth1 configuration files"
fi

## Add command to rc.local for sensors to work on Axiomtek boards
if [ "$platform" == "i3-Q77-AX" -o "$platform" == "i5-Q77-AX" -o "$platform" == "i7-Q77-AX" ]; then
   echo "modprobe w83627ehf force_id=0x8860" >> /etc/rc.d/rc.local
   echo "Added w83627ehf kernel module to rc.local for sensors"
fi

## Touch the ntp drift files and change owner of /etc/ntp to ntp so /var/log/messages does not
## fill up with drift.TEMP errors
touch /etc/ntp/drift
touch /etc/ntp/drift.TEMP
chown ntp:ntp /etc/ntp
chown ntp:ntp /etc/ntp/*

## If kickstart was started with the kernel command line option "asknetwork", then we assume
## this is a staticly IP'ed system (not dhcp) so change the ifcfg-eth0 file to come up
## as static instead of dhcp.  This should normally only be used for Host PCs that need
## a static IP during both kickstart and normal operation.
[ -n "`grep \"kernel command line\" /root/anaconda.log | grep \"asknetwork\"`" ] && sed -i 's/BOOTPROTO="dhcp"/BOOTPROTO=none/' /etc/sysconfig/network-scripts/ifcfg-eth0 && echo "Modified ifcfg-eth0 to disable dhcp"

## Disable the base CentOS 6 repositories
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.disabled
mv /etc/yum.repos.d/CentOS-Debuginfo.repo /etc/yum.repos.d/CentOS-Debuginfo.repo.disabled
mv /etc/yum.repos.d/CentOS-Media.repo /etc/yum.repos.d/CentOS-Media.repo.disabled
mv /etc/yum.repos.d/CentOS-Vault.repo /etc/yum.repos.d/CentOS-Vault.repo.disabled

## Terminal launcher definition
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/menu_path 'applications:/'
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/launcher_location '/usr/share/applications/gnome-terminal.desktop'
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/bonobo_iid ''
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/custom_icon ''
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type bool --set /apps/panel/objects/terminal_launcher/locked true
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type bool --set /apps/panel/objects/terminal_launcher/panel_right_stick false
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/object_type 'launcher-object'
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type bool --set /apps/panel/objects/terminal_launcher/use_custom_icon false
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/tooltip ''
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/toplevel_id 'top_panel'
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/action_type 'lock'
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type bool --set /apps/panel/objects/terminal_launcher/use_menu_path false
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type int --set /apps/panel/objects/terminal_launcher/position 3
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type string --set /apps/panel/objects/terminal_launcher/attached_toplevel_id ''

## Remove email_launcher and Add Terminal launcher to the top panel
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type list --list-type=string --set /apps/panel/general/object_id_list '[menu_bar,web_launcher,terminal_launcher]'

## GNOME terminal window preferences
gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type int --set /apps/gnome-terminal/profiles/Default/scrollback_lines 10000

## Move original empty dhcpd.conf file so that the Host Characterization
## copies in our default dhcpd.conf file.
[ -e /etc/dhcp/dhcpd.conf ] && mv /etc/dhcp/dhcpd.conf /etc/dhcp/dhcpd.conf.sample

## KEEP THIS CODE LAST!
## If we get a Connection Refused talking with the Host, then it seems that nothing in ks.cfg
## after this section will get executed so do not add anything else below this conditional.
## Send CM number and MAC addr(grep eth1 MAC addr specially on Axiomtek board) to Host PC when CM is kickstarted 
if [ -f /root/pcType ]; then
	PC_ID=`cat /root/pcType`
	if [ "$PC_ID" == "matco" ] ; then
	   matco_rpm='rh9.0_matco-01.00-2.i386.rpm'
	   if [ -e /etc/$matco_rpm ]; then
	      rpm -i --quiet /etc/$matco_rpm >/dev/null 2>&1
	      rm /etc/$matco_rpm
	      echo "Successfully installed MatCo RPM"
	   fi
	else 
	   if [ "$platform" == "i3-Q77-AX" -o "$platform" == "i5-Q77-AX" -o "$platform" == "i7-Q77-AX" ]; then
	      MAC_ADDR=`/sbin/ifconfig | grep eth1`
	   else
	      MAC_ADDR=`/sbin/ifconfig | grep eth0`
	   fi
	   MAC_ADDR=${MAC_ADDR:38}
	   echo "Sending $PC_ID=$MAC_ADDR to Host PC"
	   exec 3<>/dev/tcp/192.168.100.100/52881
	   echo $PC_ID=$MAC_ADDR >&3
	   cat <&3
	   echo "Sent!"
	fi
fi

echo "Finished with the post install section"

sleep 5

%end
